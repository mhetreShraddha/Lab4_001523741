/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.Person;
import model.VitalSigns;

/**
 *
 * @author mhetr
 */
public class CommunityStatus extends javax.swing.JPanel {

    /**
     * Creates new form CommunityStatus
     */
    
    private City city;
    
    public CommunityStatus(City city) {
        initComponents();
        this.city = city;
        city.getCommunityList().forEach(community -> {
            jCommunity.addItem(community.getCommunityName());
        });
        
        populateOverviewTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        popupMenu1 = new java.awt.PopupMenu();
        jCommunity = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblView = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        jCommunity.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCommunityItemStateChanged(evt);
            }
        });
        jCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityActionPerformed(evt);
            }
        });

        jLabel1.setText("Community");

        tblView.setBackground(new java.awt.Color(176, 224, 230));
        tblView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "", "Total no of patient"
            }
        ));
        jScrollPane1.setViewportView(tblView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 790, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(482, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCommunityActionPerformed

    private void jCommunityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCommunityItemStateChanged
        populateOverviewTable();
    }//GEN-LAST:event_jCommunityItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCommunity;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JTable tblView;
    // End of variables declaration//GEN-END:variables

    private void populateOverviewTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblView.getModel();
        model.setRowCount(0);
        String[] countRow = {"Abnormal blood pressure", 
                "Normal blood pressure",
                "Abnormal pulse rate",
                "Normal pulse rate",
                "Abnormal temperature",
                "Normal temperature",
                "Abnormal respiration",
                "Normal respiration"
        
        };
        int[] vitalSignscount = new int[8]; // 1.blood pressure, pulse rate, temperature, respiration
        String seletectedCommunity = jCommunity.getSelectedItem().toString();
        for(Community community : city.getCommunityList())
        {
            if(!community.getCommunityName().equals(seletectedCommunity))
                continue;
            for(House house : community.getHouseList())
            {
                for(Person person : house.getPersonList())
                {
                    Patient patient = person.getPatient();
                    if(patient.getEncounterHistory().getEncounterList().isEmpty())
                    {
                        vitalSignscount[0]++;
                        vitalSignscount[2]++;
                        vitalSignscount[4]++;
                        vitalSignscount[6]++;
                        continue;
                    }
                    VitalSigns vitalSigns = patient.getEncounterHistory().getEncounterList().get(0).getVitalSigns();
                    int pulseRate = Integer.parseInt(vitalSigns.getPulseRate());
                    int temperature = Integer.parseInt(vitalSigns.getTemperature());
                    int respirationRate = Integer.parseInt(vitalSigns.getRespirationRate());
                    int bloodPressure = Integer.parseInt(vitalSigns.getBloodPressure());
                    
                    if(bloodPressure < 120)
                        vitalSignscount[0]++;
                    else
                        vitalSignscount[1]++;
                    
                    if(pulseRate <= 100)
                        vitalSignscount[2]++;
                    else
                        vitalSignscount[3]++;
                    
                    if(temperature <= 99)
                        vitalSignscount[4]++;
                    else
                        vitalSignscount[5]++;
                    
                    if(respirationRate <= 16)
                        vitalSignscount[6]++;
                    else
                        vitalSignscount[7]++;
                }
            }
        }
        for(int i = 0; i<countRow.length; i++)
        {
            Object[] row = new Object[2];
            row[0] = countRow[i];
            row[1] = vitalSignscount[i];
            model.addRow(row);
        }
    }
}
